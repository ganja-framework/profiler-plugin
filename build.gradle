apply plugin: 'groovy'
apply plugin: 'cobertura'
apply plugin: 'maven'
apply plugin: 'idea'

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
    }

    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.2.4"
    }
}

sourceCompatibility = 1.7
version = "0.1.${System.env.BUILD_NUMBER}"

repositories {
    mavenCentral()
    maven {
        url "https://nixilla.net/nexus/content/groups/public/"
    }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.1'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'ganja:common:0.1.1'
    compile 'ganja.component:event:0.1.26'
    compile 'ganja.component:di:0.1.24'
    compile 'ganja.component:event:0.1.11'
    compile 'ganja.component:http:0.1.48'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:2.2.2'
    compile 'org.apache.commons:commons-lang3:3.3.2'
}

if (!hasProperty('sonatypeUsername')) {
    ext.sonatypeUsername = ''
}
if (!hasProperty('sonatypePassword')) {
    ext.sonatypePassword = ''
}
if (!hasProperty('sonatypeUrl')) {
    ext.sonatypeUrl = ''
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.groovy
}

artifacts {
    archives sourcesJar
}

cobertura {
    coverageDirs << file("/build/classes/main")
    coverageSourceDirs = [ sourceSets.main.groovy.srcDirs ]
    coverageFormats = ['xml', 'html']
    coverageExcludes = [ '.*example.*' ]
}

if (!hasProperty('sonatypeUsername')) {
    ext.sonatypeUsername = ''
}
if (!hasProperty('sonatypePassword')) {
    ext.sonatypePassword = ''
}
if (!hasProperty('sonatypeUrl')) {
    ext.sonatypeUrl = ''
}

uploadArchives {

    group 'build'
    description = "Does a maven deploy of archives artifacts"

    repositories {
        mavenDeployer {
            repository(url: "${sonatypeUrl}/releases/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.version = version
            pom.artifactId = "profiler"
            pom.groupId = "ganja.plugin"
            pom.project {
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
